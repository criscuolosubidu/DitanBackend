version: '3.8'

services:
  # PostgreSQL 数据库服务
  db:
    image: postgres:latest
    container_name: ditan_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-ditan}
      POSTGRES_USER: ${DATABASE_USER:-huanyu}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-Huanyu2020yyds!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    networks:
      - ditan_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - NO_PROXY=${NO_PROXY}
    container_name: ditan_backend
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      # 数据库配置
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER:-huanyu}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-Huanyu2020yyds!}
      DATABASE_NAME: ${DATABASE_NAME:-ditan}
      
      # 应用配置
      APP_NAME: ${APP_NAME:-DitanBackend}
      APP_VERSION: ${APP_VERSION:-0.2.0}
      APP_HOST: 0.0.0.0
      APP_PORT: 8000
      APP_DEBUG: ${APP_DEBUG:-False}
      
      # 日志配置
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      LOG_FILE: logs/app.log
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - ditan_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    name: ditan_postgres_data

networks:
  ditan_network:
    name: ditan_network
    driver: bridge

